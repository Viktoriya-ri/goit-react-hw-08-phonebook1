{"version":3,"file":"static/js/298.111f54ab.chunk.js","mappings":"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","sources":["components/ErrorMsg/ErrorMsg.jsx","redux/contacts.selectors.js","pages/ContactsPage.jsx","pages/Pages.styled.js"],"sourcesContent":["import React from 'react'\n\nconst ErrorMsg = ({message}) => {\n    return(\n        <p className=\"error\">{message}</p>\n    );\n};\n\nexport default ErrorMsg;","import { createSelector } from '@reduxjs/toolkit';\n\nconst selectPhonebook = state => state.phonebook;\n\nexport const selectContacts = createSelector(\n  selectPhonebook,\n  phonebook => phonebook.contacts\n);\nexport const selectContactsIsLoading = createSelector(\n  selectPhonebook,\n  phonebook => phonebook.isLoading\n);\nexport const selectContactsError = createSelector(\n  selectPhonebook,\n  phonebook => phonebook.error\n);\n\nexport const selectContactsFilterTerm = state => state.filter.filter","import ErrorMsg from 'components/ErrorMsg/ErrorMsg';\nimport Loader from '../components/Loader/Loader';\nimport React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectContactsError,\n  selectContactsFilterTerm,\n  selectContactsIsLoading,\n} from 'redux/contacts.selectors';\nimport {\n  addContact,\n  deleteContact,\n  fetchContacts,\n} from 'redux/contactsReducer';\nimport { setFilter } from 'redux/filterReducer';\nimport { StyledForm, StyledInput } from './Pages.styled';\n\nconst ContactsPage = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n  const filterTerm = useSelector(selectContactsFilterTerm);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onSubmit = contact => {\n    dispatch(addContact(contact));\n    reset();\n  };\n\n  const onDeleteContact = contactId => {\n    console.log(contactId);\n    dispatch(deleteContact(contactId));\n  };\n\n  const handleFilterTerm = ({ target: { value } }) => {\n    dispatch(setFilter(value));\n  };\n\n  const filteredContacts =\n    contacts !== null &&\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterTerm.toLowerCase().trim())\n    );\n\n  return (\n    <div>\n      <StyledForm onSubmit={handleSubmit(onSubmit)}>\n        <label>\n          <span>Name:</span>\n          <StyledInput {...register('name', { required: true })} type=\"text\" />\n          {errors.name && <span>This field is required</span>}\n        </label>\n        <label>\n          <span>Number:</span>\n          <StyledInput {...register('number', { required: true })} type=\"text\" />\n          {errors.number && <span>This field is required</span>}\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </StyledForm>\n      \n      <div>\n        <h3>Find contact by name:</h3>\n        <input\n          onChange={handleFilterTerm}\n          value={filterTerm}\n          type=\"text\"\n          placeholder=\"Enter name\"\n        />\n      </div>\n\n      {isLoading && <Loader />}\n      {error && <ErrorMsg message={error} />}\n      <ul>\n        {filteredContacts &&\n          filteredContacts.map(contact => {\n            return (\n              <li key={contact.id}>\n                <h3>{contact.name}</h3>\n                <p>{contact.number}</p>\n                <button onClick={() => onDeleteContact(contact.id)}>\n                  Delete\n                </button>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  align-items: center;\n  margin-right: 20px;\n  margin-bottom: 20px;\n\n  color: black;\n  text-decoration: none;\n`;\nexport const StyledInput = styled.input`\n  \n  align-items: center;\n  margin-right: 20px;\n  margin-left: 20px;\n  margin-bottom: 20px;\n\n  \n`;\n"],"names":["_ref","message","_jsx","className","children","selectPhonebook","state","phonebook","selectContacts","createSelector","contacts","selectContactsIsLoading","isLoading","selectContactsError","error","selectContactsFilterTerm","filter","_useForm","useForm","register","handleSubmit","reset","errors","formState","dispatch","useDispatch","useSelector","filterTerm","useEffect","fetchContacts","filteredContacts","contact","name","toLowerCase","includes","trim","_jsxs","StyledForm","onSubmit","addContact","StyledInput","_objectSpread","required","type","number","onChange","value","target","setFilter","placeholder","Loader","ErrorMsg","map","onClick","contactId","id","console","log","deleteContact","styled","_templateObject","_taggedTemplateLiteral","_templateObject2"],"sourceRoot":""}