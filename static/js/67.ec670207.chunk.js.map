{"version":3,"file":"static/js/67.ec670207.chunk.js","mappings":"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","sources":["components/input/Input.jsx","components/contacts/Titles/Titles.styled.jsx","components/contacts/Titles/Titles.jsx","components/contacts/filter/filter.styled.jsx","components/contacts/filter/filter.jsx","components/contacts/Item/item.styled.jsx","components/contacts/Item/item.jsx","components/contacts/contactsList/contactsList.styled.jsx","components/contacts/contactsList/contactsList.jsx","pages/Contacts.js"],"sourcesContent":["import { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport Notiflix from 'notiflix';\nimport { TextField, Button } from '@mui/material';\nconst schema = yup.object().shape({\n  name: yup.string().min(3).max(32).required(),\n\n  number: yup.string().min(3).max(14).required(),\n});\n\nexport const Input = () => {\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      number: '',\n    },\n    validationSchema: schema,\n    onSubmit: (values, { resetForm }) => {\n      if (\n        contacts.find(\n          contact => contact.name.toLowerCase() === values.name.toLowerCase()\n        )\n      ) {\n      \n        return Notiflix.Notify.failure(`${values.name} is already in contacts`);\n      }\n      dispatch(addContact(values));\n      resetForm();\n    },\n  });\n\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit} style={{ marginBottom: '10px' }}>\n  \n        <TextField\n          fullWidth\n          id=\"name\"\n          name=\"name\"\n          label=\"Name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n          sx={{ mb: 2, height:'78px' }}\n        />\n        <TextField\n          fullWidth\n          id=\"number\"\n          name=\"number\"\n          label=\"Number\"\n          type=\"number\"\n          value={formik.values.number}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.number && Boolean(formik.errors.number)}\n          helperText={formik.touched.number && formik.errors.number}\n          sx={{ mb: 2,height:'78px' }}\n        />\n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          Add contact\n        </Button>\n      </form>\n    </div>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const MainTitle = styled.h1`\nposition:relative;\n  font-size: 44px;\n  font-weight: 700;\n  letter-spacing: 1px;\n  text-transform: uppercase;\n  text-align: center;\n  white-space: nowrap;\n  padding-bottom: 13px;\n\n  &:before {\n    background-color: #1976D2;\n    content: '';\n    display: block;\n    height: 3px;\n    width: 75px;\n    margin-bottom: 5px;\n  }\n\n  &:after {\n    background-color: #1976D2;\n    content: '';\n    display: block;\n  position:absolute; right:0; bottom:0;\n    height: 3px;\n    width: 75px;\n    margin-bottom: 0.25em;\n  }\n`;\n\nexport const Span = styled.span`\n\n color:  #1976D2;\n\n`\n","import { MainTitle, Span } from './Titles.styled';\n\nexport const Title = () => {\n  return (\n    <MainTitle>\n      Phonebo<Span>ok</Span>\n    </MainTitle>\n  );\n};\n","import styled from \"@emotion/styled\";\n\n\nexport const Wrapper = styled.div`\n\nwidth:100%;\n\n`\n\n\nexport const Input = styled.input`\n\nwidth: 100%;\npadding: 12px 20px;\nmargin: 8px 0;\ndisplay: inline-block;\nborder: 1px solid #ccc;\nborder-radius: 4px;\n box-sizing: border-box;\n\n`\n\nexport const Title = styled.h3`\n\ntext-align:center;\n\n\n`","import { useSelector } from \"react-redux\";\nimport {Input,Wrapper,Title} from './filter.styled';\nimport { selectFilter } from \"redux/contacts/selectors\";\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from \"redux/contacts/filterSlice\";\n\n\nexport const Filter = () => {\n\n  const dispatch = useDispatch();\n  const handleInputChange = e => dispatch(setFilter(e.target.value));\n\n  const filter = useSelector(selectFilter);\n  return (\n    <Wrapper>\n      <Title>Find contacts by name</Title>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Who are you looking for?..\"\n        value={filter}\n        onChange={handleInputChange}\n      />\n    </Wrapper>\n  );\n};\n\n","\nimport styled from \"@emotion/styled\";\n\nexport const Contact = styled.p`\n\nfont-size:16px;\nfont-weight: bold;\nflex: 2;\n`\n\nexport const Tel = Contact.withComponent('number');\n\nexport const Wrapper = styled.div`\n \ndisplay:flex;\ngap:10px;\nalign-items:center;\nflex: 1;\n`\n\n\nexport const Delete = styled.div`\n  \ncursor:pointer;\n\n`\n\nexport const Container = styled.div`\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%; /* Make sure the item takes up the full width */\n\n  }\n`;\n\n\n","import {Wrapper,Contact,Tel,Delete,Container} from \"./item.styled\"\nimport { AiFillDelete } from 'react-icons/ai';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from \"redux/contacts/operations\";\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\nimport PhoneAndroidIcon from '@mui/icons-material/PhoneAndroid';\nexport const ItemContact = ({name,number,id}) => {\n\n  const dispatch = useDispatch();\n\n  const handleContactDelete = id => {\n\n    dispatch(deleteContact(id));\n  };\n\n return (\n   \n    <Container>\n<Wrapper>\n  <ContactPhoneIcon color='primary'/>\n  <Contact>{name}</Contact>\n</Wrapper>\n<Wrapper>\n<PhoneAndroidIcon color='primary'/>\n  <Tel>{number}</Tel>\n</Wrapper>\n<Delete role=\"button\" aria-label=\"Delete\" onClick={() => handleContactDelete(id)}>\n\n  <AiFillDelete size={20} />\n</Delete>\n</Container>\n)\n}\n\n","import styled from \"@emotion/styled\";\n\n\nexport const List = styled.ul`\n\nwidth:100%;\npadding-left:15px;\npadding-right:15px;\n\n`\n\nexport const Item = styled.li`\n\ndisplay:flex;\nalign-items:center;\njustify-content: space-between;\nmargin-bottom:10px;\n`\n\nexport const EmptyList = styled.p`\n\n font-size:20px;\n font-style: italic;\n\n\n`\n\n","import { ItemContact } from '../Item';\nimport { Item, EmptyList,List } from './contactsList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectContacts, selectFiltredContacts } from 'redux/contacts/selectors';\n\nexport const ContactsList = () => {\n  const filtredContacts = useSelector(selectFiltredContacts);\n  const contacts = useSelector(selectContacts);\n  return (\n    <>\n      <List>\n        {contacts.length === 0 && (\n          <EmptyList>There aren't contacts yet. Let's add somebody.</EmptyList>\n        )}\n        {filtredContacts.length === 0 && contacts.length !== 0 && (<EmptyList>There aren't contacts containing this query</EmptyList>)}\n        {filtredContacts.map(({ id, name, number }) => (\n          <Item key={id}>\n            <ItemContact name={name} number={number} id={id} />\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\n\n\n","\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Input } from 'components/input';\nimport { Title} from 'components/contacts/Titles';\nimport { Filter } from 'components/contacts/filter';\nimport { selectError, selectLoading } from 'redux/contacts/selectors';\nimport { ContactsList } from 'components/contacts/contactsList';\nimport { fetchContacts } from 'redux/contacts';\n\n\nconst Contacts = () => {\n\n      const dispatch = useDispatch();\n      const isLoading = useSelector(selectLoading);\n      const error = useSelector(selectError);\n\n      useEffect(() => {\n   \n        dispatch(fetchContacts())\n\n      },[dispatch])\n\n    return (\n        \n        <>\n      <Title/>     \n      <Input/>\n      <Filter />\n      {isLoading && <p>Loading contacts...</p> }\n      {error && <p>{error}</p>}\n      <ContactsList/>\n        </>\n    )\n}\n\nexport default Contacts;\n\n"],"names":["schema","yup","shape","name","min","max","required","number","Input","dispatch","useDispatch","contacts","useSelector","selectContacts","formik","useFormik","initialValues","validationSchema","onSubmit","values","_ref","resetForm","find","contact","toLowerCase","Notiflix","concat","addContact","_jsx","children","_jsxs","handleSubmit","style","marginBottom","TextField","fullWidth","id","label","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","sx","mb","height","type","Button","color","variant","MainTitle","styled","_templateObject","_taggedTemplateLiteral","Span","_templateObject2","Title","Wrapper","_templateObject3","Filter","filter","selectFilter","placeholder","e","setFilter","target","Contact","Tel","withComponent","Delete","Container","_templateObject4","ItemContact","ContactPhoneIcon","PhoneAndroidIcon","role","onClick","deleteContact","handleContactDelete","AiFillDelete","size","List","Item","EmptyList","ContactsList","filtredContacts","selectFiltredContacts","_Fragment","length","map","isLoading","selectLoading","selectError","useEffect","fetchContacts"],"sourceRoot":""}